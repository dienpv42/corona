@use "sass:math";

@mixin SegoeUIVariable(){
    font-family: 'SegoeUIVariable', sans-serif;
}
@mixin Bahnschrift(){
  font-family: 'Bahnschrift', sans-serif;
}
@mixin text-style($fs, $lh, $cl, $fw:400){
    font-size: $fs;
    line-height: $lh;
    color: $cl;
    font-weight: $fw;
}
@mixin bg_gradient(){
    background: linear-gradient(270deg, #CA0A2F 6.58%, #03174C 91.67%);
}
@mixin text_gradient(){
    background: linear-gradient(90.87deg, #CA0A2F 11.79%, #5A6FE3 93.94%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-fill-color: transparent;
}
@mixin stroke($color: #000, $size: 1px) {
    text-shadow:
      -#{$size} -#{$size} 0 $color,
       0        -#{$size} 0 $color,
       #{$size} -#{$size} 0 $color,
       #{$size}  0        0 $color,
       #{$size}  #{$size} 0 $color,
       0         #{$size} 0 $color,
      -#{$size}  #{$size} 0 $color,
      -#{$size}  0        0 $color;
}
@mixin line_text($line){
    word-break: break-word;
    display: -webkit-box;
    -webkit-line-clamp: $line;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin pd_scroll() {
  @media (max-width: $sizeTablet) {
    margin-left: sizeT(20)*-1;
    margin-right: sizeT(20)*-1;
    padding-left: sizeT(20);
    padding-right: sizeT(20);
  }
  @media (max-width: $sizeMobile) {
    margin-left: size(20)*-1;
    margin-right: size(20)*-1;
    padding-left: size(20);
    padding-right: size(20);
  }
}
@mixin no_scroll_bar() {
  &::-webkit-scrollbar {
    @media (max-width: $sizeTablet) {
      height: 0;
      opacity: 0;
    }
  }
}

@function size($number, $windowWidth: 375) {
  $result: math.div(100 * $number, $windowWidth);
  @return $result * 1vw;
}

@function sizeT($number, $windowWidth: 767) {
  $result: math.div(100 * $number, $windowWidth);
  @return $result * 1vw;
}

@function sizeP($number, $windowWidth: 1920) {
  $result: math.div(100 * $number, $windowWidth);
  @return $result * 1vw;
}

@function calcP($d, $number) {
  $size: sizeP($number);
  @return calc($d - $size);
}

@function calcPL($d, $number) {
  $size: sizeP($number);
  @return calc($d + $size);
}

@function calcT($d, $number) {
  $sizeM: sizeT($number);
  @return calc($d - $sizeM);
}

@function calcTL($d, $number) {
  $sizeM: sizeT($number);
  @return calc($d + $sizeM);
}

@function calcM($d, $number) {
  $sizeM: size($number);
  @return calc($d - $sizeM);
}

@function calcML($d, $number) {
  $sizeM: size($number);
  @return calc($d + $sizeM);
}